/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TemplatesRouteImport } from './routes/templates'
import { Route as PreviewRouteImport } from './routes/preview'
import { Route as BuilderRouteImport } from './routes/builder'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TemplatesTemplateIdRouteImport } from './routes/templates_.$templateId'

const TemplatesRoute = TemplatesRouteImport.update({
  id: '/templates',
  path: '/templates',
  getParentRoute: () => rootRouteImport,
} as any)
const PreviewRoute = PreviewRouteImport.update({
  id: '/preview',
  path: '/preview',
  getParentRoute: () => rootRouteImport,
} as any)
const BuilderRoute = BuilderRouteImport.update({
  id: '/builder',
  path: '/builder',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TemplatesTemplateIdRoute = TemplatesTemplateIdRouteImport.update({
  id: '/templates_/$templateId',
  path: '/templates/$templateId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/builder': typeof BuilderRoute
  '/preview': typeof PreviewRoute
  '/templates': typeof TemplatesRoute
  '/templates/$templateId': typeof TemplatesTemplateIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/builder': typeof BuilderRoute
  '/preview': typeof PreviewRoute
  '/templates': typeof TemplatesRoute
  '/templates/$templateId': typeof TemplatesTemplateIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/builder': typeof BuilderRoute
  '/preview': typeof PreviewRoute
  '/templates': typeof TemplatesRoute
  '/templates_/$templateId': typeof TemplatesTemplateIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/builder'
    | '/preview'
    | '/templates'
    | '/templates/$templateId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/builder' | '/preview' | '/templates' | '/templates/$templateId'
  id:
    | '__root__'
    | '/'
    | '/builder'
    | '/preview'
    | '/templates'
    | '/templates_/$templateId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BuilderRoute: typeof BuilderRoute
  PreviewRoute: typeof PreviewRoute
  TemplatesRoute: typeof TemplatesRoute
  TemplatesTemplateIdRoute: typeof TemplatesTemplateIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/templates': {
      id: '/templates'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof TemplatesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/preview': {
      id: '/preview'
      path: '/preview'
      fullPath: '/preview'
      preLoaderRoute: typeof PreviewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/builder': {
      id: '/builder'
      path: '/builder'
      fullPath: '/builder'
      preLoaderRoute: typeof BuilderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/templates_/$templateId': {
      id: '/templates_/$templateId'
      path: '/templates/$templateId'
      fullPath: '/templates/$templateId'
      preLoaderRoute: typeof TemplatesTemplateIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BuilderRoute: BuilderRoute,
  PreviewRoute: PreviewRoute,
  TemplatesRoute: TemplatesRoute,
  TemplatesTemplateIdRoute: TemplatesTemplateIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
